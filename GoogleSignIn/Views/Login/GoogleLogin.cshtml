@model GoogleSignIn.User

@using System.Web.Configuration
@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h2>GoogleLogin</h2>

@Html.AntiForgeryToken()

<button type="button" id="btnSignIn" class="btn btn-outline-primary">Google 登入</button>
<button type="button" id="btnDisConnect" class="btn btn-outline-danger">DisConnect</button>

@section scripts
{
    <script>
        let GoogleClientId = "@WebConfigurationManager.AppSettings["GoogleClientId"]";
        let redirectUrl = "@Url.Action("GoogleLogin", "Login")";
    </script>

    <script>
        $(function () {
            $("#btnSignIn").on("click", function () {
                GoogleLogin();
            });

            $("#btnDisConnect").on("click", function () {
                GoogleDisconnect();
            })
        });

        function GoogleSigninInit() {
            gapi.load('auth2', function () {
                gapi.auth2.init({
                    client_id: GoogleClientId//必填，記得開發時期要開啟 Chrome開發人員工具 查看有沒有403錯誤(Javascript來源被禁止)
                });
            });//end gapi.load
        }; // end GoogleSigninInit function

        function GoogleLogin() {
            let auth2 = gapi.auth2.getAuthInstance();
            auth2.signIn().then(function (GoogleUser) {
                console.log('google login success');
                let user_id = GoogleUser.getId();
                let AuthResponse = GoogleUser.getAuthResponse(true);
                let id_token = AuthResponse.id_token;
                console.log(GoogleUser);
                console.log("user_id:" + user_id);
                console.log("id_token: " + id_token);
                $.ajax({
                    url: redirectUrl,
                    method: "POST",
                    data: { id_token: id_token },
                    success: function (msg) {
                        console.log(msg);
                    },
                    error: function (msg) {
                        console.log("error: " + msg);
                    }
                });
            },
                function (error) {
                    console.log('google login failed');
                    console.log(error);
                });
        }

        function GoogleDisconnect() {
            let auth2 = gapi.auth2.getAuthInstance();

            auth2.disconnect().then(function () {
                console.log('google disconnect');
            });
        }
    </script>

    <script src="https://apis.google.com/js/platform.js?onload=GoogleSigninInit" async defer></script>
}
@{
    ViewBag.Title = "GoogleLogin";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

